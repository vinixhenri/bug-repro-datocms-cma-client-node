name: Windows Repro

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  repro:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        node: [22]
    env:
      SLS_INTERACTIVE_SETUP_ENABLE: '0'
    steps:
      - uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Print diagnostics
        shell: pwsh
        run: |
          $PSVersionTable
          node -v
          npm -v
          git --version
          echo "Path sep: [\\]"

      - name: Clean install
        run: yarn install

      - name: Start serverless offline (Windows)
        shell: powershell
        run: |
          $job = Start-Job -ScriptBlock {
            Set-Location $using:PWD
            $env:NODE_ENV = "test"
            serverless offline start --noAuth
          }
          $job.Id | Out-File -FilePath serverless.pid
          Start-Sleep -Seconds 10

      - name: Wait for serverless to be ready
        shell: powershell
        run: |
                $maxAttempts = 30
                $attempt = 0
                $ready = $false

                while ($attempt -lt $maxAttempts -and -not $ready) {
                  try {
                    $response = Invoke-WebRequest -Uri "http://localhost:3000/health" -UseBasicParsing -ErrorAction SilentlyContinue
                    if ($response.StatusCode -eq 200) {
                      Write-Host "Serverless is ready"
                      $ready = $true
                    }
                  } catch {
                    $attempt++
                    Write-Host "Waiting for serverless... ($attempt/$maxAttempts)"
                    Start-Sleep -Seconds 2
                  }
                }

                if (-not $ready) {
                  Write-Host "Serverless failed to start"
                  exit 1
                }

      - name: Run integration tests
        run: npm run test:integration
        env:
          API_URL: http://localhost:3000
          NODE_ENV: test

      - name: Stop serverless offline
        if: always()
        shell: powershell
        run: |
                if (Test-Path serverless.pid) {
                  $jobId = Get-Content serverless.pid
                  Stop-Job -Id $jobId -ErrorAction SilentlyContinue
                  Remove-Job -Id $jobId -ErrorAction SilentlyContinue
                  Remove-Item serverless.pid
                }
                # Kill any remaining Node processes on port 3000
                $processes = Get-NetTCPConnection -LocalPort 3000 -ErrorAction SilentlyContinue | Select-Object -ExpandProperty OwningProcess -Unique
                if ($processes) {
                  $processes | ForEach-Object { Stop-Process -Id $_ -Force -ErrorAction SilentlyContinue }
                }

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '20.x'
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          continue-on-error: true

      - name: Archive test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-node-${{ matrix.node-version }}
          path: |
            test-results/
            logs/
          retention-days: 7
